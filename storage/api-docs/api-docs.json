{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation - Floating Blood Bank",
        "description": "Version 1 All REST API's",
        "contact": {
            "email": "jayantadas.dev@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Development Server"
        },
        {
            "url": "https://api.floatingbloodbank.com/api",
            "description": "Production Server"
        }
    ],
    "paths": {
        "/v1/activity-logs": {
            "get": {
                "tags": [
                    "Activity Logs"
                ],
                "summary": "Get all activity logs",
                "description": "Fetches all activity logs recorded in the system.",
                "operationId": "3fd881a26fea807b6a863e30a01db91f",
                "responses": {
                    "200": {
                        "description": "Activity logs retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Activity logs retrieved successfully."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "log_name": {
                                                        "type": "string",
                                                        "example": "Auth"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "User logged in."
                                                    },
                                                    "ip_address": {
                                                        "type": "string",
                                                        "example": "192.168.1.1"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john.doe@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-27T10:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Error retrieving activity logs."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/activity-logs/log-name/{log_name}": {
            "get": {
                "tags": [
                    "Activity Logs"
                ],
                "summary": "Get activity logs by log name",
                "description": "Fetches activity logs filtered by log name.",
                "operationId": "e0a51f47deeb447980253fb1326a6101",
                "parameters": [
                    {
                        "name": "log_name",
                        "in": "path",
                        "description": "The name of the log to filter by",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Auth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity logs retrieved successfully by log name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Activity logs for log name 'Auth' retrieved successfully."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "log_name": {
                                                        "type": "string",
                                                        "example": "Auth"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "User logged in."
                                                    },
                                                    "ip_address": {
                                                        "type": "string",
                                                        "example": "192.168.1.1"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john.doe@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-27T10:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Log name not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "No logs found for the provided log name."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/activity-logs/date-range": {
            "get": {
                "tags": [
                    "Activity Logs"
                ],
                "summary": "Get activity logs by date and time range",
                "description": "Fetches activity logs filtered by a specific date and time range.",
                "operationId": "930b1301af77c2176911cfcd0ca5124d",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "The start date and time for the log filter in ISO 8601 format.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-11-01T00:00:00Z"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "The end date and time for the log filter in ISO 8601 format.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-11-30T23:59:59Z"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity logs retrieved successfully by date range.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Activity logs retrieved successfully for the specified date range."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "log_name": {
                                                        "type": "string",
                                                        "example": "Auth"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "User logged in."
                                                    },
                                                    "ip_address": {
                                                        "type": "string",
                                                        "example": "192.168.1.1"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john.doe@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-27T10:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid date range.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 400
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Invalid date range."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Start date must be earlier than end date."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Error retrieving logs by date range."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user, optionally with a profile picture, and returns a JWT token.",
                "operationId": "c77951e2d0f6fbb7c670e7eb59cb7660",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "phone_number"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "pic": {
                                        "description": "Profile picture file (JPG/PNG, max size 5MB)",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "User registered successfully."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIs..."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 422
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Validation Error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "example": "email"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Server error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log in a user",
                "description": "Authenticates a user and returns a JWT token upon successful login.",
                "operationId": "d0c5ac61d58053f710bbb705e4b17338",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Login successful."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIs..."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid credentials: Email not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Invalid credentials: Email not found."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "type": "string",
                                                        "example": "email"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided email address is not registered."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials: Incorrect password.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 401
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Invalid credentials: Incorrect password."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        },
                                        "errors": {
                                            "properties": {
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided password is incorrect."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Server error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out the authenticated user",
                "description": "Invalidates the JWT token and logs the user out.",
                "operationId": "17ed6053a7af6ad1aef19f78b120a873",
                "responses": {
                    "200": {
                        "description": "Logout successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Logout successful."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Token missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 401
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Unauthorized - Token missing or invalid."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Token is missing or invalid."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Internal server error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/auth/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh the JWT token",
                "description": "Generates a new JWT token using the current token.",
                "operationId": "12564ce561eb45b0b276d4e3db7e45ce",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token refreshed successfully."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIs..."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Token missing or expired.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 401
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Unauthorized - Token missing or expired."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Token is invalid or expired."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Internal server error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/auth/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get the authenticated user's details",
                "description": "Returns the details of the currently authenticated user.",
                "operationId": "2438f29f83216ded165fa85b9a716747",
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "User details retrieved successfully."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "pic": {
                                                    "type": "string",
                                                    "example": "http://example.com/storage/user_pic/john_doe.jpg"
                                                },
                                                "otp_email": {
                                                    "type": "string",
                                                    "example": "123456"
                                                },
                                                "otp_phone": {
                                                    "type": "string",
                                                    "example": "654321"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "example": "2024-11-27T10:00:00Z"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-11-27T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-11-27T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Token is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 401
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Unauthorized - Token is missing or invalid."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Token is missing or invalid."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Internal server error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": []
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "description": "Retrieve a list of all users. JWT Bearer token is required.",
                "operationId": "93426756deb355e7f1c03361a003d8b3",
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Users retrieved successfully."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    },
                                                    "phone_number": {
                                                        "type": "string",
                                                        "example": "1234567890"
                                                    },
                                                    "status": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "pic": {
                                                        "type": "string",
                                                        "example": "http://example.com/storage/user_pic.jpg"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-11-27T10:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-11-27T10:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Server error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Creates a new user and returns the created user details. JWT Bearer token is required.",
                "operationId": "bb3d44248ac29630fabb6a25ca4f3e58",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "phone_number",
                                    "status"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "pic": {
                                        "description": "Profile picture (JPG/PNG)",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 201
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "User created successfully."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "pic": {
                                                    "type": "string",
                                                    "example": "http://example.com/storage/user_pic.jpg"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-11-27T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-11-27T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 422
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Validation error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Server error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete multiple users",
                "description": "Deletes multiple users by IDs. JWT Bearer token is required.",
                "operationId": "fc3ed7a4028a599855aef3ec7160245a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Array of user IDs to delete",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Users deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Users deleted successfully."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "One or more users not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "One or more users not found."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Server error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a single user's details",
                "description": "Retrieve the details of a specific user by their ID. JWT Bearer token is required.",
                "operationId": "1a089200d1415970de847ff209e7b17f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "User retrieved successfully."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "pic": {
                                                    "type": "string",
                                                    "example": "http://example.com/storage/user_pic.jpg"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-11-27T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-11-27T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "User not found."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The specified user does not exist."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Server error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a specific user",
                "description": "Updates the details of a specific user by ID. JWT Bearer token is required.",
                "operationId": "9660688714f2203d270967a05afbb0f6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jane@example.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "9876543210"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "pic": {
                                        "type": "string",
                                        "example": "http://example.com/storage/user_pic.jpg",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "User updated successfully."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "jane@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "9876543210"
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "pic": {
                                                    "type": "string",
                                                    "example": "http://example.com/storage/user_pic.jpg"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "User not found."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Server error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a specific user",
                "description": "Deletes a specific user by ID. JWT Bearer token is required.",
                "operationId": "78197c259789b5862d34de728c2b7e46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "User deleted successfully."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "User not found."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Server error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/users/bulk": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create multiple users",
                "description": "Create multiple users in a single request. JWT Bearer token is required.",
                "operationId": "87abc87185ea4069d1d0cebda5a3068f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "name",
                                        "email",
                                        "password",
                                        "phone_number"
                                    ],
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john@example.com"
                                        },
                                        "password": {
                                            "type": "string",
                                            "example": "password123"
                                        },
                                        "phone_number": {
                                            "type": "string",
                                            "example": "1234567890"
                                        },
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "pic": {
                                            "type": "string",
                                            "example": "http://example.com/storage/user_pic.jpg",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Users created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 201
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Users created successfully."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    },
                                                    "phone_number": {
                                                        "type": "string",
                                                        "example": "1234567890"
                                                    },
                                                    "status": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "pic": {
                                                        "type": "string",
                                                        "example": "http://example.com/storage/user_pic.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 422
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Validation error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The email field is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Server error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/users/{id}/status": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user status",
                "description": "Updates the status of a user. Only boolean values are accepted. JWT Bearer token is required.",
                "operationId": "380060b0cbd51c72a5c4ab6fe06a07b4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User status updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "User status updated successfully."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "User not found."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid status value.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 422
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Invalid status value."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Internal server error."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An empty array."
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "An unexpected error occurred."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter your Bearer token in the format: Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Endpoints for authentication and user management."
        },
        {
            "name": "Activity Logs",
            "description": "Endpoints for activity logs. Using this API's we can get all user logs."
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}